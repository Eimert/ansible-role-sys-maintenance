---
# tasks file for sys-maintenance
- name: set terraform url
  shell: >
    set -o pipefail
    echo "https://releases.hashicorp.com/terraform/
    $(curl -s https://checkpoint-api.hashicorp.com/v1/check/terraform |
    jq -r -M '.current_version')/terraform_
    $(curl -s https://checkpoint-api.hashicorp.com/v1/check/terraform |
    jq -r -M '.current_version')_linux_amd64.zip" | sed "s/ //g"
  register: terraform_url
  changed_when: false

- name: update terraform
  unarchive:
    src: "{{ terraform_url.stdout }}"
    dest: /usr/local/bin
    remote_src: true
    mode: 0755
  when: terraform_url.stdout is defined

- name: set vagrant url
  shell: >
    set -o pipefail
    echo "https://releases.hashicorp.com/vagrant/
    $(curl -s https://checkpoint-api.hashicorp.com/v1/check/vagrant |
    jq -r -M '.current_version')/vagrant_
    $(curl -s https://checkpoint-api.hashicorp.com/v1/check/vagrant |
    jq -r -M '.current_version')_x86_64.deb" | sed "s/ //g"
  register: vagrant_url
  changed_when: false

- name: update vagrant
  apt:
    deb: "{{ vagrant_url.stdout }}"
  when: vagrant_url.stdout is defined

- name: upgrade pip2
  command: "pip2 install --upgrade pip"
  register: pip2
  changed_when: "'Requirement already up-to-date' in pip2.stdout"

- name: upgrade pip3
  command: "pip install --upgrade pip"
  register: pip3
  changed_when: "'Requirement already up-to-date' in pip3.stdout"

- name: upgrade bundler
  command: "gem install bundler"
  register: bundler
  changed_when: "'gem installed' in bundler.stdout"

- name: upgrade ansible
  command: "pip install --user --upgrade ansible"
  register: ans
  become: false
  changed_when: "'Requirement already up-to-date: ansible' not in ans.stdout"

- name: purge old kernels
  shell: >
    set -o pipefail
    yes | purge-old-kernels
  register: purge_k
  changed_when: "'No kernels are eligible for removal' not in purge_k.stdout"

- name: atolla ethernet driver
  block:
    - name: check if usbnet kernel module for atolla eth0 is loaded
      modprobe:
        name: usbnet
      register: usbnet

    - name: build atolla ethernet driver for this kernel
      block:
        - name: get and unzip atolla driver
          unarchive:
            src: "{{ atolla_url }}"
            dest: "{{ atolla_download_dir }}"
            remote_src: true
            mode: 0755
          register: destdir
        - name: insmod driver
          shell: >
            "cd {{ destdir.dest }}/AX88179_178A_LINUX_DRIVER_* &&
            echo $PWD && make && make install &&
            modprobe usbnet && insmod ax88179_178a.ko"
          changed_when: false
      when: usbnet.state != "present"
  when: atolla|bool

- name: update Postman
  unarchive:
    src: https://dl.pstmn.io/download/latest/linux64
    dest: /opt
    remote_src: true
    mode: 0755

- name: update keyring
  command: apt-key net-update
  register: net_update
  failed_when: net_update.rc != 1
  changed_when: false
